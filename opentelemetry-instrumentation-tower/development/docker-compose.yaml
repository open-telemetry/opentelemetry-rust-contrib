networks:
  echo-server:
    name: "echo-server"

services:
  example-axum-server:
    build:
      context: ../../
      dockerfile: ./opentelemetry-instrumentation-tower/examples/axum-http-service/Dockerfile.axum
    container_name: http-server
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_METRIC_EXPORT_INTERVAL=10000
    networks:
      echo-server:
    ports:
      - "5000:5000"

  example-hyper-server:
    build:
      context: ../../
      dockerfile: ./opentelemetry-instrumentation-tower/examples/hyper-http-service/Dockerfile.hyper
    container_name: http-server
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_METRIC_EXPORT_INTERVAL=10000
    networks:
      echo-server:
    ports:
      - "5000:5000"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command:
      - "--config=/etc/otel-collector-config.yaml"
    networks:
      echo-server:
    ports:
      - "4317:4317"
    volumes:
      - ./config/otel-collector-config.yaml:/etc/otel-collector-config.yaml

  mimir:
    image: grafana/mimir:latest
    container_name: mimir
    command: [ "-config.file=/mimir/config/mimir.yaml" ]
    networks:
      echo-server:
    ports:
      - "8001:8001"
    volumes:
      - ./config/mimir.yaml:/mimir/config/mimir.yaml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    networks:
      echo-server:
    ports:
      - "3000:3000"
    volumes:
      - ./config/grafana-datasource-mimir.yaml:/etc/grafana/provisioning/datasources/mimir.yaml

  k6-load-gen:
    image: grafana/k6:latest
    container_name: k6-load-gen
    command:
      - "run"
      - "/scripts/echo-all.js"
    networks:
      echo-server:
    volumes:
      - ./load-gen:/scripts
