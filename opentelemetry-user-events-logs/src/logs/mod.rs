use exporter::UserEventsExporter;
use opentelemetry_sdk::logs::LoggerProviderBuilder;
use reentrant_logprocessor::ReentrantLogProcessor;

mod exporter;
mod reentrant_logprocessor;

/// Extension trait for adding a user event exporter to the logger provider builder.
pub trait UserEventsLoggerProviderBuilderExt {
    /// Adds a user event exporter to the logger provider builder with the given provider name.
    ///
    /// Tracepoint names are generated by combining the provider name, event
    /// level and keyword (currently hardcoded to `1`) in the following format:
    /// `ProviderName + '_' + 'L' + EventLevel + 'K' + EventKeyword`
    ///
    /// For example, if "myprovider" is the provider name, the following tracepoint names are created:
    /// - `myprovider_L4K1`
    /// - `myprovider_L5K1`
    /// - `myprovider_L3K1`
    /// - `myprovider_L2K1`
    /// - `myprovider_L1K1`
    ///
    fn with_user_event_exporter(self, provider_name: &str) -> Self;
}

impl UserEventsLoggerProviderBuilderExt for LoggerProviderBuilder {
    fn with_user_event_exporter(self, provider_name: &str) -> Self {
        let exporter = UserEventsExporter::new(provider_name);
        let reenterant_processor = ReentrantLogProcessor::new(exporter);
        self.with_log_processor(reenterant_processor)
    }
}
