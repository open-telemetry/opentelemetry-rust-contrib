name: CI
env:
  CI: true

permissions:
  contents: read
  
on:
  pull_request:
  push:
    branches:
    - main
    paths-ignore:
    - '**.md'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    strategy:
      matrix:
        # test both stable and beta versions of Rust on ubuntu-latest
        os: [ubuntu-latest]
        rust: [stable, beta]
        # test only stable version of Rust on Windows and MacOS
        include:
          - rust: stable
            os: windows-2025
          - rust: stable
            os: macos-latest
          - rust: stable
            os: ubuntu-22.04-arm
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.rust == 'beta' }}
    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
      with:
        egress-policy: audit

    - name: Free disk space
      if: ${{ matrix.os == 'ubuntu-latest'}}
      run: |
        df -h
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/share/dotnet
        df -h
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        submodules: true
    - uses: dtolnay/rust-toolchain@56f84321dbccf38fb67ce29ab63e4754056677e0
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt
    - name: "Set rustup profile"
      run: rustup set profile minimal
    - uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Test (Windows)
      if: ${{ matrix.os == 'windows-2025'}}
      run: ./scripts/test.ps1
      shell: pwsh
    - name: Test (Unix)
      if: ${{ matrix.os != 'windows-2025'}}
      run: bash ./scripts/test.sh
  lint:
    strategy:
      matrix:
        # clippy must be run in every OS to lint platform-specific code 
        os: [ubuntu-latest, windows-2025, macos-latest, ubuntu-22.04-arm]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
      with:
        egress-policy: audit

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        submodules: true
    - uses: dtolnay/rust-toolchain@56f84321dbccf38fb67ce29ab63e4754056677e0
      with:
        toolchain: stable
        components: rustfmt,clippy
    - uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
      with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Format
      run: cargo fmt --all -- --check
    - name: Lint (Windows)
      if: ${{ matrix.os == 'windows-2025'}}
      run: ./scripts/lint.ps1
      shell: pwsh
    - name: Lint (Unix)
      if: ${{ matrix.os != 'windows-2025'}}
      run: ./scripts/lint.sh
  msrv:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-2025]
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@56f84321dbccf38fb67ce29ab63e4754056677e0
        with:
          toolchain: stable
      - uses: taiki-e/install-action@a48a50298f98c47e46a957ae6f82c44cc4878e42 # v2.49.47
        with:
          tool: cargo-msrv
      - name: Check MSRV for all crates
        run: bash ./scripts/msrv.sh
  cargo-deny:
    runs-on: ubuntu-latest
    continue-on-error: true # Prevent sudden announcement of a new advisory from failing ci
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: EmbarkStudios/cargo-deny-action@34899fc7ba81ca6268d5947a7a16b4649013fea1 # v2.0.11
        with:
          command: check advisories
  docs:
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: dtolnay/rust-toolchain@56f84321dbccf38fb67ce29ab63e4754056677e0
        with:
          toolchain: stable
      - uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
            repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: doc
        run: cargo doc --no-deps --all-features
        env:
          CARGO_INCREMENTAL: '0'
          RUSTDOCFLAGS: -Dwarnings
  coverage:
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@56f84321dbccf38fb67ce29ab63e4754056677e0
        with:
          toolchain: stable
          components: llvm-tools-preview
      - uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
            repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@9cfaca2426fcec262716306a13a478bd3b36200f # cargo-llvm-cov
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo llvm-cov
        run: cargo llvm-cov --locked --all-features --workspace --lcov --output-path lcov.info
      - name: Upload to codecov.io
        uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238 # v4.6.0
        with:
          fail_ci_if_error: true
  cargo-machete:
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@56f84321dbccf38fb67ce29ab63e4754056677e0
        with:
          toolchain: stable
      - uses: taiki-e/install-action@a48a50298f98c47e46a957ae6f82c44cc4878e42 # v2.49.47
        with:
          tool: cargo-machete
      - name: cargo machete
        run: cargo machete
  cargo-workspace-lints:
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@56f84321dbccf38fb67ce29ab63e4754056677e0
        with:
          toolchain: stable
      - uses: taiki-e/install-action@a48a50298f98c47e46a957ae6f82c44cc4878e42 # v2.49.47
        with:
          tool: cargo-workspace-lints
      - name: cargo workspace-lints
        run: cargo workspace-lints
